# KG full name (used in prompts)
kg_full_name: PubChem knowledge graph

# KG short name (used to generate file paths)
kg_short_name: idsm

# KG textual description (used in prompts)
kg_description: The IDSM SPARQL endpoint provides fast similarity and structural search functionality in knowledge graph such as ChEMBL, ChEBI or PubChem.

# SPARQL endpoint serving the KG
kg_sparql_endpoint_url: "https://idsm.elixir-czech.cz/sparql/endpoint/idsm" 

# SPARQL endpoint serving the ontologies, if different from the KG SPARQL endpoint (optional)
# Default: same as kg_sparql_endpoint_url
ontologies_sparql_endpoint_url: "http://gen2kgbot.i3s.unice.fr/corese" 

# Prefixes and namespaces to be used in the Turtle and SPARQL queries
prefixes:
  bao:            "http://www.bioassayontology.org/bao#"
  biopax:         "http://www.biopax.org/release/biopax-level3.owl#"
  cito:           "http://purl.org/spar/cito/"
  chembl:         "http://rdf.ebi.ac.uk/terms/chembl#"
  dc:             "http://purl.org/dc/elements/1.1/"
  dcterms:        "http://purl.org/dc/terms/"
  enpkg:          "https://enpkg.commons-lab.org/kg/"
  enpkg_module:   "https://enpkg.commons-lab.org/module/"
  fabio:          "http://purl.org/spar/fabio/"
  foaf:           "http://xmlns.com/foaf/0.1/"
  frbr:           "http://purl.org/vocab/frbr/core#"
  ndfrt:          "http://purl.bioontology.org/ontology/NDFRT/"
  obo:            "http://purl.obolibrary.org/obo/"
  owl:            "http://www.w3.org/2002/07/owl#"
  patent:         "http://data.epo.org/linked-data/def/patent/"
  pav:            "http://purl.org/pav/"
  pubchem:        "http://rdf.ncbi.nlm.nih.gov/pubchem/vocabulary#"
  rdf:            "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  rdfs:           "http://www.w3.org/2000/01/rdf-schema#"
  schema:         "http://schema.org/"
  skos:           "http://www.w3.org/2004/02/skos/core#"
  sio:            "http://semanticscience.org/resource/"
  snomedct:       "http://purl.bioontology.org/ontology/SNOMEDCT/"
  xsd:            "http://www.w3.org/2001/XMLSchema#"
  up:             "http://purl.uniprot.org/core/"

# Max number of classes similar to the user's question (optional)
# Default: 10
max_similar_classes: 10

# Expand the initial list of classes similar to the question with additional classes connected to them (optional)
# Default: false
expand_similar_classes: false

# Format of the classes context: one of "turtle", "tuple" (optional)
# Default: "turtle"
class_context_format: turtle

# Optional list of classes and namespaces to be excluded from the similar classes (optional)
excluded_classes_namespaces:
  - "http://data.epo.org/linked-data/def/patent/Publication"
  - "http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#"

# Root path for the cache of classes context and pre-computed embeddings
data_directory: "./data"

# Name of the subdirectoties that contain the pre-computed embeddings of classes, properties and queries.
# Parent diectory will be {data_directory}/{graph short name}/{vector_db}_embeddings/ 
# e.g. ./data/idsm/faiss_embeddings/
class_embeddings_subdir: "classes_with_instance_nomic"
property_embeddings_subdir: "properties_nomic"
queries_embeddings_subdir: "sparql_queries_nomic"

# Path to a usable temporary directory
temp_directory: "./tmp"


# -----------------------------------------------------------
# LLM configurations

seq2seq_models:
# Each seq2seq model shall contain the following paramters:
# - server_type (str): one of "openai", "ollama", "ollama-server", "ovh", "hugface", "google" "deepseek"
# - id (str): the model identifier as defined by the provider
# - base_url (str): server's URL. Mandatory if server_type is "ollama-server", "ovh" or "deepseek"
# - temperature (decimal): the temperature parameter for the generation (optional)
# - max_retries (int): the maximum number of retries in case of failure (optional)
# - top_p (decimal): the top_p parameter for the generation (optional), default: 0.95
# - model_kwargs (str): additional parameters for the model (optional)
  
  llama-3_1-70B@ovh:
    server_type: ovh
    id: Meta-Llama-3_1-70B-Instruct
    base_url: https://llama-3-1-70b-instruct.endpoints.kepler.ai.cloud.ovh.net/api/openai_compat/v1
    temperature: 0
    max_retries: 3
    top_p: 0.95

  gpt-4o@openai:
    server_type: openai
    id: gpt-4o
    temperature: 0
    max_retries: 3
    top_p: 0.95
    
  o3-mini@openai:
    server_type: openai
    id: o3-mini

  deepseek-chat@deepseek:
    server_type: deepseek
    id: deepseek-chat
    base_url: https://api.deepseek.com
    temperature: 0
    max_retries: 3
    top_p: 0.95

  deepseek-reasoner@deepseek:
    server_type: deepseek
    id: deepseek-reasoner
    base_url: https://api.deepseek.com
    temperature: 0
    max_retries: 3
    top_p: 0.95

  deepseek-reasoner@hf:
    server_type: hugface
    id: deepseek-ai/DeepSeek-R1
    base_url: https://huggingface.co/api/inference-proxy/together
    top_p: 0.95


text_embedding_models:
# Each text embedding model shall contain the following paramters:
# - server_type (str): one of "openai-embeddings", "ollama-embeddings"
# - id (str): the model identifier as defined by the provider
# - vector_db (str): the type of vector database, one of "faiss", "chroma"

  nomic-embed-text_faiss@local:
    server_type: ollama-embeddings
    id: nomic-embed-text
    vector_db: faiss
  
  mxbai-embed-large_faiss@local:
    server_type: ollama-embeddings
    id: mxbai-embed-large
    vector_db: faiss

  nomic-embed-text_chroma@local:
    server_type: ollama-embeddings
    id: nomic-embed-text
    vector_db: chroma
  
# -----------------------------------------------------------
# Scenarios
      
scenario_1:
  validate_question: llama-3_1-70B@ovh
  ask_question: llama-3_1-70B@ovh
    
scenario_2:
  validate_question: llama-3_1-70B@ovh
  generate_query: llama-3_1-70B@ovh
  interpret_csv_query_results: llama-3_1-70B@ovh

scenario_3:
  validate_question: llama-3_1-70B@ovh
  generate_query: llama-3_1-70B@ovh
  interpret_csv_query_results: llama-3_1-70B@ovh
  text_embedding_model: nomic-embed-text_faiss@local

scenario_4:
  validate_question: llama-3_1-70B@ovh
  generate_query: llama-3_1-70B@ovh
  interpret_csv_query_results: llama-3_1-70B@ovh
  text_embedding_model: nomic-embed-text_faiss@local

scenario_5:
  validate_question: llama-3_1-70B@ovh
  generate_query: llama-3_1-70B@ovh
  interpret_csv_query_results: llama-3_1-70B@ovh
  text_embedding_model: nomic-embed-text_faiss@local

scenario_6:
  validate_question: llama-3_1-70B@ovh
  generate_query: llama-3_1-70B@ovh
  interpret_csv_query_results: llama-3_1-70B@ovh
  text_embedding_model: nomic-embed-text_faiss@local

scenario_7:
  validate_question: llama-3_1-70B@ovh
  generate_query: llama-3_1-70B@ovh
  interpret_csv_query_results: llama-3_1-70B@ovh
  text_embedding_model: nomic-embed-text_faiss@local
